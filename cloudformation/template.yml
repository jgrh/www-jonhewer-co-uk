AWSTemplateFormatVersion: "2010-09-09"
Description: "www-jonhewer-co-uk ECS Cluster."
Parameters:
  ContainerVersion:
    Type: "String"
    Description: "The version of the application container to deploy."
Resources:
  #
  # VPC Resources
  #
  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId:
        Ref: "Vpc"
      InternetGatewayId:
        Ref: "InternetGateway"
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
  PublicRouteViaIgw:
    Type: "AWS::EC2::Route"
    Properties:
      GatewayId:
        Ref: "InternetGateway"
      DestinationCidrBlock: "0.0.0.0/0"
      RouteTableId:
        Ref: "RouteViaIgw"
    DependsOn: "AttachGateway"
  PublicSubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId:
        Ref: "PublicSubnet"
      RouteTableId:
        Ref: "RouteViaIgw"
  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId:
        Ref: "Vpc"
      CidrBlock: "10.0.0.0/24"
      AvailabilityZone:
        Fn::Select:
          - "0"
          - Fn::GetAZs:
              Ref: "AWS::Region"
      MapPublicIpOnLaunch: true
  RouteViaIgw:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: "Vpc"
  Vpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
  #
  # ECS Cluster
  #
  EcsCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
        ClusterName: "www-jonhewer-co-uk"
  EcsInstance:
    Type: "AWS::EC2::Instance"
    Properties:
      IamInstanceProfile:
        Ref: "EcsInstanceProfile"
      ImageId: "ami-e3fbd290"
      InstanceType: "t2.nano"
      KeyName: "id_rsa"
      SecurityGroupIds:
        - Ref: "EcsSecurityGroup"
      SubnetId:
        Ref: "PublicSubnet"
      Tags:
        - Key: "Name"
          Value:
            Fn::Sub: "${AWS::StackName} ECS Instance"
      UserData:
        Fn::Base64:
          Fn::Join:
            - "\n"
            - - "#!/bin/bash"
              - Fn::Sub: "echo ECS_CLUSTER=${EcsCluster} >> /etc/ecs/ecs.config"
    DependsOn: "AttachGateway"
  EcsInstanceIp:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: "vpc"
      InstanceId:
        Ref: EcsInstance
  EcsInstancePolicy:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
  EcsInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - Ref: "EcsInstancePolicy"
  EcsSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          FromPort: "22"
          IpProtocol: "tcp"
          ToPort: "22"
        - CidrIp: "0.0.0.0/0"
          FromPort: "80"
          IpProtocol: "tcp"
          ToPort: "80"
      VpcId:
        Ref: "Vpc"
      GroupDescription: "ECS Allowed Ports"
  #
  # ECS Service
  #
  EcsService:
    Type: "AWS::ECS::Service"
    Properties:
      Cluster:
        Ref: EcsCluster
      DeploymentConfiguration:
        MaximumPercent: "100"
        MinimumHealthyPercent: "0"
      DesiredCount: "1"
      TaskDefinition:
        Ref: EcsTaskDefinition
  EcsTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      ContainerDefinitions:
        - Name: "www-jonhewer-co-uk"
          Image:
            Fn::Sub: "739241322767.dkr.ecr.eu-west-1.amazonaws.com/www-jonhewer-co-uk:${ContainerVersion}"
          Cpu: "10"
          PortMappings:
            - ContainerPort: "80"
              HostPort: "80"
          Memory: "256"
          Essential: true
